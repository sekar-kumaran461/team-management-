# Generated by Django 5.2.4 on 2025-08-18 06:42

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BulkResourceUpload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='bulk_resource_uploads/')),
                ('original_filename', models.CharField(max_length=255)),
                ('file_type', models.CharField(choices=[('csv', 'CSV File'), ('excel', 'Excel File (.xlsx)'), ('json', 'JSON File')], default='csv', max_length=10)),
                ('file_size', models.PositiveIntegerField(help_text='File size in bytes')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('partial', 'Partially Completed')], default='pending', max_length=20)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('total_rows', models.PositiveIntegerField(default=0)),
                ('successful_imports', models.PositiveIntegerField(default=0)),
                ('failed_imports', models.PositiveIntegerField(default=0)),
                ('error_log', models.TextField(blank=True)),
                ('success_log', models.TextField(blank=True)),
                ('batch_id', models.CharField(help_text='Unique batch identifier', max_length=100, unique=True)),
                ('skip_duplicates', models.BooleanField(default=True, help_text='Skip duplicate resources based on title')),
                ('make_public', models.BooleanField(default=True, help_text='Make imported resources public by default')),
            ],
            options={
                'db_table': 'bulk_resource_uploads',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='GoogleDriveSyncStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_synced', models.DateTimeField(auto_now=True)),
                ('sync_success', models.BooleanField(default=True)),
                ('sync_message', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('file_url', models.URLField(blank=True, null=True)),
                ('drive_file_id', models.CharField(blank=True, max_length=128, null=True)),
                ('is_public', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tags', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='ResourceBulkOperation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('make_public', models.BooleanField(default=True, help_text='Make resources public by default')),
            ],
            options={
                'db_table': 'resource_bulk_operations',
            },
        ),
        migrations.CreateModel(
            name='ResourceCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ResourceComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_resolved', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ResourceDownload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('downloaded_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ResourceFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(max_length=255)),
                ('original_filename', models.CharField(max_length=255)),
                ('file_type', models.CharField(choices=[('pdf', 'PDF Document'), ('image', 'Image'), ('video', 'Video'), ('audio', 'Audio'), ('document', 'Document'), ('spreadsheet', 'Spreadsheet'), ('presentation', 'Presentation'), ('archive', 'Archive'), ('code', 'Code File'), ('other', 'Other')], default='other', max_length=20)),
                ('file_size', models.PositiveIntegerField(help_text='File size in bytes')),
                ('mime_type', models.CharField(blank=True, max_length=100)),
                ('drive_file_id', models.CharField(blank=True, max_length=128, null=True, unique=True)),
                ('drive_file_url', models.URLField(blank=True)),
                ('drive_thumbnail_url', models.URLField(blank=True)),
                ('drive_embed_url', models.URLField(blank=True)),
                ('local_file_path', models.CharField(blank=True, max_length=500)),
                ('description', models.TextField(blank=True)),
                ('is_public', models.BooleanField(default=True, help_text='Whether file is publicly accessible')),
                ('is_featured', models.BooleanField(default=False, help_text='Featured file for the resource')),
                ('download_count', models.PositiveIntegerField(default=0)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('last_accessed', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'resource_files',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='ResourceFileAccess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_type', models.CharField(choices=[('view', 'View'), ('download', 'Download'), ('preview', 'Preview'), ('share', 'Share')], default='view', max_length=20)),
                ('accessed_at', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'resource_file_access',
                'ordering': ['-accessed_at'],
            },
        ),
        migrations.CreateModel(
            name='ResourceFileDriveSync',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_synced', models.DateTimeField(auto_now=True)),
                ('sync_success', models.BooleanField(default=True)),
                ('sync_message', models.TextField(blank=True)),
                ('retry_count', models.PositiveIntegerField(default=0)),
            ],
            options={
                'db_table': 'resource_file_drive_sync',
            },
        ),
        migrations.CreateModel(
            name='ResourceFileUploadBatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_id', models.CharField(max_length=100, unique=True)),
                ('status', models.CharField(choices=[('uploading', 'Uploading'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='uploading', max_length=20)),
                ('total_files', models.PositiveIntegerField(default=0)),
                ('uploaded_files', models.PositiveIntegerField(default=0)),
                ('failed_files', models.PositiveIntegerField(default=0)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('error_log', models.TextField(blank=True)),
                ('make_files_public', models.BooleanField(default=True)),
                ('auto_generate_thumbnails', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'resource_file_upload_batches',
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='ResourceFileVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version_number', models.PositiveIntegerField()),
                ('drive_file_id', models.CharField(blank=True, max_length=128)),
                ('file_size', models.PositiveIntegerField()),
                ('upload_notes', models.TextField(blank=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'resource_file_versions',
                'ordering': ['-version_number'],
            },
        ),
        migrations.CreateModel(
            name='ResourceLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudyMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(blank=True)),
                ('summary', models.TextField(blank=True)),
                ('reference_links', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
    ]
